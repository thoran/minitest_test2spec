#!/usr/bin/env ruby
# minitest_assertion2spec

# 20180727
# 0.1.1

# Todo:
# 1. Don't use Files because each file is being opened multiple times; which is ironic given that I started writing this for converting Files' tests.

require 'Files'

def path
  @path ||= ARGV[0]
end

def filenames
  @filenames ||= Files.find(path: path, pattern: '**/*.rb', return_files_object: true).paths
end

def setup2before
  replacement_pattern = /def setup/
  replacement_text = 'before do'
  Files.gsub!(filenames, replacement_pattern, replacement_text)
end

def teardown2after
  replacement_pattern = /def teardown/
  replacement_text = 'after do'
  Files.gsub!(filenames, replacement_pattern, replacement_text)
end

def test2describeit
  new_file_contents = ''
  filenames.each do |filename|
    File.open(filename, 'w+') do |f|
      in_test_method = false
      existing_file_contents = f.read
      test_method_pattern = /^ *def +test_(.+?)$/
      existing_file_contents.each_line do |line|
        if in_test_method
          if line =~ /end$/
            in_test_method = false
            new_file_contents << '    end' + "\n"
            new_file_contents << '  end' + "\n"
          else
            new_file_contents << '  ' + line
          end
        elsif line =~ test_method_pattern
          in_test_method = true
          md = line.match(test_method_pattern)
          new_file_contents << '  describe ' + '"' + md[0].gsub('_', ' ') + '"' + ' do' + "\n"
          new_file_contents << '    it "works" do' + "\n"
        else
          new_file_contents << line
        end
      end
      f.puts new_file_contents
    end
  end
end

def main
  setup2before
  teardown2after
  test2describeit
end

main
